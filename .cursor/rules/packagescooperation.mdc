---
description: 
globs: 
alwaysApply: true
---

# Your rule content
1. 要求所有模組和函數都使用標準化的 docstring 格式，其中包含Args、Returns、Description、References。
2. 所有實驗執行程式需將 metadata 存入 experiments.log，並使用標準命名格式命名輸出圖像。
3. 每個訓練腳本都必須呼叫 torch.manual_seed 並在 requirements.txt 中記錄使用的所有套件版本。
4. 所有產生的圖片檔名必須包含實驗 ID 與產生圖檔的函式名稱。
5. 新增的套件必須立即更新至環境設定檔，例如 requirements.txt 或 Dockerfile。
6. 在做測試的時候請將相關程式碼跟結果保存在tests資料夾底下，測試的程式碼中docstring要完整記錄測試目的跟日期，並自動運行測試程式碼。
7. 要跟Github互動時，如果要發Pull Request必須先執行完測試，然後要先發在branch中

GitHub專案位置：https://github.com/JNRLEE/SBP_analyzer.git
不要任意破壞Project主架構跟分類
SBP_analyzer/
├── analyzer/                    # 核心分析邏輯
│   ├── __init__.py
│   ├── base_analyzer.py
│   ├── model_structure_analyzer.py
│   ├── training_dynamics_analyzer.py
│   └── intermediate_data_analyzer.py
├── data_loader/                 # 數據載入與解析
│   ├── __init__.py
│   ├── base_loader.py
│   ├── experiment_loader.py
│   └── hook_data_loader.py
├── metrics/                     # 分析指標計算
│   ├── __init__.py
│   ├── distribution_metrics.py
│   └── performance_metrics.py
│   └── layer_activity_metrics.py
├── visualization/               # 視覺化功能
│   ├── __init__.py
│   ├── distribution_plots.py
│   ├── performance_plots.py
│   ├── model_structure_plots.py
│   └── layer_activity_plots.py
├── reporter/                    # 報告生成
│   ├── __init__.py
│   └── report_generator.py
├── utils/                       # 通用工具
│   ├── __init__.py
│   ├── file_utils.py
│   └── tensor_utils.py
│   └── stat_utils.py
├── interfaces/                  # 用戶接口
│   ├── __init__.py
│   └── analyzer_interface.py
└── tests/                       # 測試模組
    ├── test_data/
    └── ...

